{"ast":null,"code":"var _jsxFileName = \"/Users/cabouelw/Desktop/React-typeScript/src/components/NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport classes from './NewTodo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoinputRef = useRef(null);\n\n  const AddNewHandler = e => {\n    e.preventDefault();\n    const text = todoinputRef.current.value;\n    if (text.trim().length === 0) return;\n    props.AddNewTodo(text);\n    todoinputRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: AddNewHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"New Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoinputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewTodo, \"1B2kcmBkgBO0mANr+32gBtgxYS8=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["React","useRef","classes","NewTodo","props","todoinputRef","AddNewHandler","e","preventDefault","text","current","value","trim","length","AddNewTodo","form"],"sources":["/Users/cabouelw/Desktop/React-typeScript/src/components/NewTodo.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport classes from './NewTodo.module.css'\n\nconst NewTodo: React.FC<{AddNewTodo: Function}> =  (props) => {\n    const todoinputRef = useRef<HTMLInputElement>(null);\n\n    const AddNewHandler = (e: React.FormEvent) => {\n        e.preventDefault()\n        const text = todoinputRef.current!.value;\n        if (text.trim().length === 0) return ;\n        props.AddNewTodo(text);\n        todoinputRef.current!.value = '';\n    }\n\treturn (\n        <form onSubmit={AddNewHandler} className={classes.form} >\n            <label htmlFor=\"text\">New Todo</label>\n            <input type='text' id=\"text\" ref={todoinputRef} ></input>\n            <button>Add</button>\n        </form>\n\t);\n}\n\nexport default NewTodo;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAyC,GAAKC,KAAD,IAAW;EAAA;;EAC1D,MAAMC,YAAY,GAAGJ,MAAM,CAAmB,IAAnB,CAA3B;;EAEA,MAAMK,aAAa,GAAIC,CAAD,IAAwB;IAC1CA,CAAC,CAACC,cAAF;IACA,MAAMC,IAAI,GAAGJ,YAAY,CAACK,OAAb,CAAsBC,KAAnC;IACA,IAAIF,IAAI,CAACG,IAAL,GAAYC,MAAZ,KAAuB,CAA3B,EAA8B;IAC9BT,KAAK,CAACU,UAAN,CAAiBL,IAAjB;IACAJ,YAAY,CAACK,OAAb,CAAsBC,KAAtB,GAA8B,EAA9B;EACH,CAND;;EAOH,oBACO;IAAM,QAAQ,EAAEL,aAAhB;IAA+B,SAAS,EAAEJ,OAAO,CAACa,IAAlD;IAAA,wBACI;MAAO,OAAO,EAAC,MAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,IAAI,EAAC,MAAZ;MAAmB,EAAE,EAAC,MAAtB;MAA6B,GAAG,EAAEV;IAAlC;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADP;AAOA,CAjBD;;GAAMF,O;;KAAAA,O;AAmBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}